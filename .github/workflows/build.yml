# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: Get ktlint version
        id: ktlint
        run: |
          # load versions.ktlint from gradle/libs.versions.toml
          V=$(grep -i "ktlint = \"\(.*\)\"" gradle/libs.versions.toml | sed -e "s/ktlint = \"\(.*\)\"/\1/")
          echo "Detected version $V"
          echo "version=$V" >> "$GITHUB_OUTPUT"
      - name: Lint Check
        uses: ScaCap/action-ktlint@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          relative: true
          ktlint_version: ${{ steps.ktlint.outputs.version }}
          reporter: ${{ (github.event_name == 'pull_request' && 'github-pr-review' ) || 'github-check' }}
          fail_on_error: true

  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          21,    # Current Java LTS
        ]
        task: [
          "build",
          "runGametest"
        ]
    runs-on: ubuntu-22.04
    needs: [ lint ]
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Prepare libs
        run: |
          chmod +x gradlew
          ./gradlew publishToMavenLocal
        working-directory: gravity-api
      - name: Run Gradle ${{ matrix.task }}
        run: ./gradlew ${{ matrix.task }}
      - name: capture build artifacts
        if: ${{ matrix.java == '21' && matrix.task == 'build' }} # Only upload artifacts built from latest java
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/